@page "/courseeditor/{CourseId:int}"

@using System.Text.RegularExpressions
@using SEIIApp.Shared
@using SEIIApp.Client.Components

@inject NavigationManager NavManager
@inject Services.CourseBackendAccessService CourseService

@if (Course != null)
{
    <h5>Course Editor</h5>

    <EditForm Model="@Course">
        <DataAnnotationsValidator />

        <small>Course Name</small><br />
        <InputText @bind-Value="Course.Name"  style="width:600px; max-width:90%"/>
        <div>&nbsp;</div>

        <small>Course Description</small><br />
        <InputTextArea @bind-Value="Course.Desc"  style="width:600px; max-width:90%"/>
        <div>&nbsp;</div>

        <small>Course Image (Optional)</small><br />
        <InputText @bind-Value="Course.Img"  style="width:600px; max-width:90%"/>
        <div>&nbsp;</div>

        <small>Course Text (Optional, ersätzt Description)</small><br />
        <InputTextArea @bind-Value="Course.Text"  style="width:600px; max-width:90%"/>
        <div>&nbsp;</div>

        <small>Video (Optional)</small><br />
        <InputText @bind-Value="Course.VideoURL"  style="width:600px; max-width:90%"/>
        <div>&nbsp;</div>

        <small>PDF (Optional)</small><br />
        <InputText @bind-Value="Course.PdfURL"  style="width:600px; max-width:90%" />
        <div>&nbsp;</div>

        <small>Quiz (Optional)</small><br />
        <InputText @bind-Value="Course.QuizId"  style="width:600px; max-width:90%" />

        <ValidationSummary />
    </EditForm>

    <button class="btn" @onclick="SaveCourseToBackend"><img src="icons/save_black_24dp.svg" /></button>
}
else
{
    <h5>Course in loading (or not found) ...</h5>
}


@code {


    [Parameter]
    public int CourseId { get; set; }

    public CourseDto Course { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (CourseId != 0)
        {
            Course = await CourseService.GetCourseById(CourseId);
        }
        else
        {
            Course = new CourseDto();
        }
    }


    private void OnSubmit()
    {

    }

    private async void SaveCourseToBackend()
    {
        if (Course.VideoURL != null && Course.VideoURL != "")
        {
            Regex regex = new Regex(@"[^=]+($|$)");
            Course.VideoURL = regex.Match(Course.VideoURL).Value;

        }
        await CourseService.AddOrUpdateCourse(Course);
        NavManager.NavigateTo("/courseeditor");

    }

}
