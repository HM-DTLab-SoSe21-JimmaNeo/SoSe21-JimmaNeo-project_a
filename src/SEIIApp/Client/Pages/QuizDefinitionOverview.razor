@page "/quizdef"

@using SEIIApp.Shared

@inject Services.QuizBackendAccessService QuizService
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<h3>Quiz Editor</h3>

@if (Quizzes?.Length > 0)
{



    <ol>
        @foreach (var quiz in Quizzes)
        {
            <li>
                @quiz.Name&nbsp;
                <button class="btn btn-primary" @onclick="() => EditQuiz(quiz)" style="margin:2px">
                    EDIT
                </button>&nbsp;
                <button class="btn btn-danger" @onclick="() => DeleteQuiz(quiz)">
                    DELETE
                </button>&nbsp;
            </li>
        }
    </ol>

    <button @onclick="AddQuiz">Add Quiz</button>


}
else
{

    <button @onclick="AddQuiz">Add Quiz</button>
}



@code {

    public QuizDto[] Quizzes { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        Quizzes = await QuizService.GetQuizOverview();
    }

    private void EditQuiz(QuizDto quiz)
    {
        NavigationManager.NavigateTo("/quizdefedit/" + quiz.Id);
    }

    private void AddQuiz()
    {
        NavigationManager.NavigateTo("/quizdefedit/0");
    }

    async Task DeleteQuiz(QuizDto quiz)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure?");
        if (confirmed)
        {
            await QuizService.DeleteQuiz(quiz.Id);
            Quizzes = await QuizService.GetQuizOverview();
        }
    }
}
