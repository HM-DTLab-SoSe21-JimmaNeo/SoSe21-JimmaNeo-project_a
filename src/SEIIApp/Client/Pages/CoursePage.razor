@page "/course/{Id:int}"

@inject Services.CourseBackendAccessService CourseService


@if (Course != null)

{

    <h1>
        @Course.Name
    </h1>
    <div class="row">
        <div class="col-sm-10">

            @if (Course.VideoURL != null && Course.VideoURL != "")
            {
                <div class="videoResponsive">
                    <iframe width="560" height="315" src="https://www.youtube.com/embed/@Course.VideoURL" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                </div>
            }
        </div>
        <span class="text">

        </span>
        <div class="col-sm-2">
            <br />
            <span class="text">
                @Course.Desc
            </span>

        </div>
    </div>

    if (Course.QuizId != "")
    {

        <a class="btn-primary btn-lg" href="/quiz/@Course.QuizId">QUIZ</a>
    }
    if (Course.PdfURL != "")
    {
        <a class="btn-primary btn-lg" href="@Course.PdfURL">PDF</a>
    }

    <a class="btn-primary btn-lg" href="/feedback/@Id">FEEDBACK</a>

}


@code {
    [Parameter]
    public int Id { get; set; }

    public CourseDto Course { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        Course = await CourseService.GetCourseById(Id);
    }
}